/**
 * Autogenerated input type of CreateSite
 */
export interface CreateSiteInput {
    name: string;
    subdomain: string;
    defaultHash: string;
    defaultSearchPage: string;
    skipLanding?: boolean | null;
    hideDonation?: boolean | null;
    themes?: string | null;
    reactionsConfig?: string | null;
    userRank?: string | null;
    editorEmails?: string[] | null;
    clientMutationId?: string | null;
  }


  /**
 * Autogenerated input type of UpdateSite
 */
export interface UpdateSiteInput {
  id: number;
  name?: string | null;
  themes?: string | null;
  reactionsConfig?: string | null;
  userRank?: string | null;
  skipLanding?: boolean | null;
  hideDonation?: boolean | null;
  subdomain?: string | null;
  editorEmails?: string[] | null;
  clientMutationId?: string | null;
}


/**
 * Possible set of operations of site view
 */
export enum SiteViewOperation {
  DELETE = "DELETE",
  PUSH = "PUSH",
  SET = "SET",
}

/**
 * An atomic mutation of site
 */
export interface SiteViewMutationInput {
  path: string[];
  operation: SiteViewOperation;
  payload: string;
}

/**
 * Autogenerated input type of CopySiteView
 * 
 */
export interface CopySiteViewInput {
  name: string;
  url?: string | null;
  type?: string | null;
  description?: string | null;
  default: boolean;
  siteId: number;
  siteViewId: number;
  clientMutationId?: string | null;
}

/**
 * Autogenerated input type of CreateSiteView
 */
export interface CreateSiteViewInput {
  name: string;
  url?: string | null;
  description?: string | null;
  default: boolean;
  type?: string | null;
  mutations: SiteViewMutationInput[];
  siteId: number;
  clientMutationId?: string | null;
}

/**
 * Autogenerated input type of DeleteSiteView
 */
export interface DeleteSiteViewInput {
  id: number;
  clientMutationId?: string | null;
}

/**
 * Autogenerated input type of UpdateSiteView
 */
export interface UpdateSiteViewInput {
  name?: string | null;
  default?: boolean | null;
  url?: string | null;
  type?: string | null;
  description?: string | null;
  id: number;
  mutations: SiteViewMutationInput[];
  clientMutationId?: string | null;
}

export enum FieldDisplay {
  BAR_CHART = "BAR_CHART",
  CHECKBOX = "CHECKBOX",
  CRUMBS_ONLY = "CRUMBS_ONLY",
  DATE = "DATE",
  DATE_RANGE = "DATE_RANGE",
  DROP_DOWN = "DROP_DOWN",
  GREATER_THAN_DROP_DOWN = "GREATER_THAN_DROP_DOWN",
  GREATER_THAN_RANGE = "GREATER_THAN_RANGE",
  LESS_THAN_DROP_DOWN = "LESS_THAN_DROP_DOWN",
  LESS_THAN_RANGE = "LESS_THAN_RANGE",
  LOCATION = "LOCATION",
  MULTISELECT = "MULTISELECT",
  NUMBER_RANGE = "NUMBER_RANGE",
  PIE_CHART = "PIE_CHART",
  STAR = "STAR",
  STRING = "STRING",
}

export enum FilterKind {
  BLACKLIST = "BLACKLIST",
  WHITELIST = "WHITELIST",
}

/**
 * Possible set of operations of site view
 */

export enum SortKind {
  count = "count",
  key = "key",
}


/**
 * An atomic mutation of site
 */
export interface SiteViewMutationInput {
  path: string[];
  operation: SiteViewOperation;
  payload: string;
}


/**
 * Autogenerated input type of UpdateWorkflowsView
 */
export interface UpdateWorkflowsViewInput {
  mutations: SiteViewMutationInput[];
  clientMutationId?: string | null;
}
